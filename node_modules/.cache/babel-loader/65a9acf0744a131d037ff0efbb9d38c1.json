{"ast":null,"code":"import { __rest, __assign } from './_virtual/_tslib.js';\nimport * as React from 'react';\nimport { TimePicker as TimePicker$1 } from '@material-ui/pickers';\nimport { getIn } from 'formik';\nimport { createErrorHandler } from './errorHandler.js';\n\nfunction fieldToTimePicker(_a) {\n  var disabled = _a.disabled,\n      _b = _a.field;\n  _b.onChange;\n\n  var fieldOnBlur = _b.onBlur,\n      field = __rest(_b, [\"onChange\", \"onBlur\"]),\n      _c = _a.form,\n      isSubmitting = _c.isSubmitting,\n      touched = _c.touched,\n      errors = _c.errors,\n      setFieldValue = _c.setFieldValue,\n      setFieldError = _c.setFieldError,\n      onChange = _a.onChange,\n      onBlur = _a.onBlur,\n      onError = _a.onError,\n      props = __rest(_a, [\"disabled\", \"field\", \"form\", \"onChange\", \"onBlur\", \"onError\"]);\n\n  var fieldError = getIn(errors, field.name);\n  var showError = getIn(touched, field.name) && !!fieldError;\n  return __assign(__assign({\n    error: showError,\n    helperText: showError ? fieldError : props.helperText,\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting,\n    onChange: onChange !== null && onChange !== void 0 ? onChange : function (date) {\n      setFieldValue(field.name, date);\n    },\n    onBlur: onBlur !== null && onBlur !== void 0 ? onBlur : function (e) {\n      fieldOnBlur(e !== null && e !== void 0 ? e : field.name);\n    },\n    onError: onError !== null && onError !== void 0 ? onError : createErrorHandler(fieldError, field.name, setFieldError)\n  }, field), props);\n}\n\nfunction TimePicker(_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  return React.createElement(TimePicker$1, __assign({}, fieldToTimePicker(props)), children);\n}\n\nTimePicker.displayName = 'FormikMaterialUITimePicker';\nexport { TimePicker, fieldToTimePicker };","map":{"version":3,"sources":["../../src/TimePicker.tsx"],"names":["MuiTimePicker"],"mappings":";;;;;;SAYgB,iB,CAAkB,E,EAQhB;MAPhB,QAAQ,GAAA,EAAA,CAAA,Q;MACR,EAAA,GAAA,EAAA,CAAA,K;AAA6D,EAAA,EAAA,CAAjC,QAAiC;;AAAjC,MAAU,WAAW,GAAA,EAAA,CAAA,MAArB;AAAA,MAA0B,KAAK,GAAA,MAAA,CAAA,EAAA,EAApD,CAAA,UAAA,EAAA,QAAA,CAAoD,CAA/B;AAAA,MAC5B,EAAA,GAAA,EAAA,CAAA,IAD4B;AAAA,MACpB,YAAY,GAAA,EAAA,CAAA,YADQ;AAAA,MACN,OAAO,GAAA,EAAA,CAAA,OADD;AAAA,MACG,MAAM,GAAA,EAAA,CAAA,MADT;AAAA,MACW,aAAa,GAAA,EAAA,CAAA,aADxB;AAAA,MAC0B,aAAa,GAAA,EAAA,CAAA,aADvC;AAAA,MAE5B,QAAQ,GAAA,EAAA,CAAA,QAFoB;AAAA,MAG5B,MAAM,GAAA,EAAA,CAAA,MAHsB;AAAA,MAI5B,OAAO,GAAA,EAAA,CAAA,OAJqB;AAAA,MAKzB,KAAK,GAAA,MAAA,CAAA,EAAA,EAPwB,CAAA,UAAA,EAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,QAAA,EAAA,SAAA,CAOxB,CALoB;;AAO5B,MAAM,UAAU,GAAG,KAAK,CAAC,MAAD,EAAS,KAAK,CAAC,IAAf,CAAxB;AACA,MAAM,SAAS,GAAG,KAAK,CAAC,OAAD,EAAU,KAAK,CAAC,IAAhB,CAAL,IAA8B,CAAC,CAAC,UAAlD;AAEA,SAAA,QAAA,CAAA,QAAA,CAAA;AACE,IAAA,KAAK,EAAE,SADT;AAEE,IAAA,UAAU,EAAE,SAAS,GAAG,UAAH,GAAgB,KAAK,CAAC,UAF7C;AAGE,IAAA,QAAQ,EAAE,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAA,QAAA,GAAY,YAHxB;AAIE,IAAA,QAAQ,EACN,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAA,QAAA,GACA,UAAU,IAAV,EAAc;AACZ,MAAA,aAAa,CAAC,KAAK,CAAC,IAAP,EAAa,IAAb,CAAb;AACD,KARL;AASE,IAAA,MAAM,EACJ,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAA,MAAA,GACA,UAAU,CAAV,EAAW;AACT,MAAA,WAAW,CAAC,CAAC,KAAA,IAAD,IAAA,CAAC,KAAA,KAAA,CAAD,GAAA,CAAA,GAAK,KAAK,CAAC,IAAZ,CAAX;AACD,KAbL;AAcE,IAAA,OAAO,EACL,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAA,OAAA,GAAW,kBAAkB,CAAC,UAAD,EAAa,KAAK,CAAC,IAAnB,EAAyB,aAAzB;AAfjC,GAAA,EAgBK,KAhBL,CAAA,EAiBK,KAjBL,CAAA;AAmBD;;SAEe,U,CAAW,E,EAAuC;AAArC,MAAA,QAAQ,GAAA,EAAA,CAAA,QAAR;AAAA,MAAa,KAAK,GAAA,MAAA,CAAA,EAAA,EAApB,CAAA,UAAA,CAAoB,CAAlB;;AAC3B,SACE,KAAA,CAAA,aAAA,CAACA,YAAD,EAAc,QAAA,CAAA,EAAA,EAAK,iBAAiB,CAAC,KAAD,CAAtB,CAAd,EAA8C,QAA9C,CADF;AAGD;;AAED,UAAU,CAAC,WAAX,GAAyB,4BAAzB","sourcesContent":["import * as React from 'react';\nimport {\n  TimePicker as MuiTimePicker,\n  TimePickerProps as MuiTimePickerProps,\n} from '@material-ui/pickers';\nimport { FieldProps, getIn } from 'formik';\nimport { createErrorHandler } from './errorHandler';\n\nexport interface TimePickerProps\n  extends FieldProps,\n    Omit<MuiTimePickerProps, 'name' | 'value' | 'error'> {}\n\nexport function fieldToTimePicker({\n  disabled,\n  field: { onChange: _onChange, onBlur: fieldOnBlur, ...field },\n  form: { isSubmitting, touched, errors, setFieldValue, setFieldError },\n  onChange,\n  onBlur,\n  onError,\n  ...props\n}: TimePickerProps): MuiTimePickerProps {\n  const fieldError = getIn(errors, field.name);\n  const showError = getIn(touched, field.name) && !!fieldError;\n\n  return {\n    error: showError,\n    helperText: showError ? fieldError : props.helperText,\n    disabled: disabled ?? isSubmitting,\n    onChange:\n      onChange ??\n      function (date) {\n        setFieldValue(field.name, date);\n      },\n    onBlur:\n      onBlur ??\n      function (e) {\n        fieldOnBlur(e ?? field.name);\n      },\n    onError:\n      onError ?? createErrorHandler(fieldError, field.name, setFieldError),\n    ...field,\n    ...props,\n  };\n}\n\nexport function TimePicker({ children, ...props }: TimePickerProps) {\n  return (\n    <MuiTimePicker {...fieldToTimePicker(props)}>{children}</MuiTimePicker>\n  );\n}\n\nTimePicker.displayName = 'FormikMaterialUITimePicker';\n"]},"metadata":{},"sourceType":"module"}